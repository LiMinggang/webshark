diff --git a/Makefile.am b/Makefile.am
index 67ba8cd..a409f52 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -47,7 +47,7 @@ bin_PROGRAMS = \
 	@rawshark_bin@		\
 	@echld_test_bin@
 
-EXTRA_PROGRAMS = wireshark-gtk wireshark tshark tfshark capinfos captype \
+EXTRA_PROGRAMS = wireshark-gtk wireshark tshark sharkd tfshark capinfos captype \
 	editcap mergecap dftest randpkt text2pcap dumpcap reordercap \
 	rawshark echld_test
 
@@ -531,6 +531,40 @@ tshark_LDADD = \
 	@LIBGNUTLS_LIBS@		\
 	@LIBSMI_LDFLAGS@
 
+sharkd_SOURCES = \
+	$(SHARK_COMMON_SRC)	\
+	capture_opts.c		\
+	filter_files.c		\
+	sharkd.c		\
+	sharkd_daemon.c		\
+	sharkd_session.c	\
+	ws_version_info.c
+
+sharkd_CPPFLAGS = $(AM_CPPFLAGS) $(GLIB_CFLAGS)
+
+sharkd_LDFLAGS = $(AM_LDFLAGS) $(EXTRALINKFLAGS)
+
+# Libraries and plugin flags with which to link tshark.
+sharkd_LDADD = \
+	capchild/libcapchild.a		\
+	caputils/libcaputils.a		\
+	ui/cli/libcliui.a		\
+	ui/libui.a			\
+	wiretap/libwiretap.la		\
+	epan/libwireshark.la		\
+	wsutil/libwsutil.la		\
+	@SSL_LIBS@			\
+	$(plugin_ldadd)			\
+	@GLIB_LIBS@			\
+	@PCAP_LIBS@			\
+	@C_ARES_LIBS@			\
+	@KRB5_LIBS@			\
+	@SYSTEMCONFIGURATION_FRAMEWORKS@	\
+	@COREFOUNDATION_FRAMEWORKS@	\
+	@LIBGCRYPT_LIBS@		\
+	@LIBGNUTLS_LIBS@		\
+	@LIBSMI_LDFLAGS@
+
 tfshark_SOURCES = \
 	$(SHARK_COMMON_SRC)	\
 	tfshark.c		\
diff --git a/epan/dissectors/packet-tcp.c b/epan/dissectors/packet-tcp.c
index bc7f4fd..856936e 100644
--- a/epan/dissectors/packet-tcp.c
+++ b/epan/dissectors/packet-tcp.c
@@ -709,13 +709,27 @@ static const char* tcp_host_get_filter_type(hostlist_talker_t* host, conv_filter
         return CONV_FILTER_INVALID;
     }
 
-    if (filter == CONV_FT_SRC_ADDRESS || filter == CONV_FT_DST_ADDRESS || filter == CONV_FT_ANY_ADDRESS) {
+    if (filter == CONV_FT_SRC_ADDRESS) {
         if (host->myaddress.type == AT_IPv4)
             return "ip.src";
-        if (host->myaddress.type == AT_IPv6)
+        if (host->myaddress.type == AT_IPv6)
             return "ipv6.src";
     }
 
+    if (filter == CONV_FT_DST_ADDRESS) {
+        if (host->myaddress.type == AT_IPv4)
+            return "ip.dst";
+        if (host->myaddress.type == AT_IPv6)
+            return "ipv6.dst";
+    }
+
+    if (filter == CONV_FT_ANY_ADDRESS) {
+        if (host->myaddress.type == AT_IPv4)
+            return "ip.addr";
+        if (host->myaddress.type == AT_IPv6)
+            return "ipv6.addr";
+    }
+
     return CONV_FILTER_INVALID;
 }
 
diff --git a/wsutil/jsmn.h b/wsutil/jsmn.h
index 7cf51aa..a0622d8 100644
--- a/wsutil/jsmn.h
+++ b/wsutil/jsmn.h
@@ -91,7 +91,7 @@ WS_DLL_PUBLIC void jsmn_init(jsmn_parser *parser);
  * Run JSON parser. It parses a JSON data string into and array of tokens, each describing
  * a single JSON object.
  */
-int jsmn_parse(jsmn_parser *parser, const char *js, size_t len,
+WS_DLL_PUBLIC int jsmn_parse(jsmn_parser *parser, const char *js, size_t len,
 		jsmntok_t *tokens, unsigned int num_tokens);
 
 /**
